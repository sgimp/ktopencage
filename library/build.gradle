apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


android {
  compileSdkVersion 29
  buildToolsVersion "29.0.2"

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 29

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles 'consumer-rules.pro'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}


def getLatestTag = { ->
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'describe', '--abbrev=0', '--tags'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  }
  catch (ignored) {
    return null
  }
}

bintray {
  user = project.hasProperty('BINTRAY_USER') ? BINTRAY_USER : null
  key = project.hasProperty('BINTRAY_API_KEY') ? BINTRAY_API_KEY : null

  publications = ['Production']

  pkg {
    repo = 'andev'
    name = 'ktopencage'
    desc = 'OpenCage geocoding client for Android'
    websiteUrl = 'https://github.com/sgimp/ktopencage'
    licenses = ['Apache-2.0']

    version {
      name = getLatestTag()
      vcsTag = 'v' + name
    }
  }
}

publishing {
  publications {
    Production(MavenPublication) {
      artifact("build/outputs/aar/library-release.aar")

      groupId 'andev'
      artifactId 'ktopencage'
      version getLatestTag()

      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        configurations.implementation.allDependencies.each {
          def dependencyNode = dependenciesNode.appendNode('dependency')
          dependencyNode.appendNode('groupId', it.group)
          dependencyNode.appendNode('artifactId', it.name)
          dependencyNode.appendNode('version', it.version)
        }
      }
    }
  }
}


task androidJavadocs(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  failOnError false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
  archiveClassifier.set("javadoc")
  from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
  archiveClassifier.set("sources")
  from android.sourceSets.main.java.sourceFiles
}

task androidJar(type: Jar) {
  from 'build/intermediates/classes/release'
}

artifacts {
  archives androidSourcesJar
  archives androidJavadocsJar
  archives androidJar
}

dependencies {
  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'com.squareup.okhttp3:okhttp:4.3.1'
  implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
